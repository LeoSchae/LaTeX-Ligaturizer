from collections import OrderedDict
from ligaturize import EditFont

font = EditFont(
    font="DroidSansMono.ttf",
    other_fonts=OrderedDict([
        ("DroidSansMono", "DroidSansMono.ttf"),
        ("FiraCode",      "FiraCode-Regular.ttf"),
        ("LatinModern",   "LatinModernMath.otf"),
        ("DejaVu_Bold",   "DejaVuSansMono-Bold.ttf"),
        ("DejaVu_Italic", "DejaVuSansMono-Italic.ttf")
    ])
)

greek_map = {
    "alpha": "Œ±",
    "beta": "Œ≤",
    "gamma": "Œ≥",
    "Gamma": "Œì",
    "delta": "Œ¥",
    "Delta": "Œî",
    "varepsilon": "Œµ",
    "epsilon": "œµ",
    "zeta": "Œ∂",
    "eta": "Œ∑",
    "theta": "Œ∏",
    "vartheta": "œë",
    "Theta": "Œò",
    "iota": "Œπ",
    "kappa": "Œ∫",
    "lambda": "Œª",
    "Lambda": "Œõ",
    "mu": "Œº",
    "nu": "ŒΩ",
    "xi": "Œæ",
    "Xi": "Œû",
    "pi": "œÄ",
    "Pi": "Œ†",
    "rho": "œÅ",
    "sigma": "œÉ",
    "Sigma": "Œ£",
    "tau": "œÑ",
    "upsilon": "œÖ",
    "phi": "œï",
    "varphi": "œÜ",
    "Phi": "Œ¶",
    "chi": "œá",
    "psi": "œà",
    "Psi": "Œ®",
    "omega": "œâ",
    "Omega": "Œ©",
}
font.add_macros(greek_map, fonts=["DejaVu_Italic"])


font.add_macros({
    "infty": "‚àû",
    "forall": "‚àÄ",
    "exists": "‚àÉ",
    "nexists": "‚àÑ",
    "partial": "‚àÇ",
    "emptyset": "‚àÖ",
    "cdots": "¬∑¬∑¬∑",
    "ldots": "...",
    "lceil": "‚åà",
    "rceil": "‚åâ",
    "lfloor": "‚åä",
    "rfloor": "‚åã"
})

font.add_macros({
    "times": "√ó",
    "cdot": "‚Ä¢",
    "cap": "‚à©",
    "cup": "‚à™",
    "neq": "‚â†",
    "leq": "‚â§",
    "geq": "‚â•",
    "in": "‚àà",
    "notin": "‚àâ",
    "subset": "‚äÇ",
    "supset": "‚äÉ",
    "approx": "‚âà",
    "equiv": "‚â°",
    "ll": "‚â™",
    "gg": "‚â´"
})

font.add_macro_font("mathbb", {
        "N": "‚Ñï",
        "Z": "‚Ñ§",
        "Q": "‚Ñö",
        "R": "‚Ñù",
        "C": "‚ÑÇ",
    })

font.add_macros({
        "NN": "‚Ñï",
        "ZZ": "‚Ñ§",
        "QQ": "‚Ñö",
        "RR": "‚Ñù",
        "CC": "‚ÑÇ"
    })

mathcal_map = {}
for c in list("ABCDEFGHIJKLMNOPQRSTUVWXYZ"):
    mathcal_map[c] = chr(ord(c)-ord('A')+ord("ùìê"))
font.add_macro_font("mathcal", mathcal_map)
font.add_macro_font("cal", mathcal_map)

mathfrak_map = {}
for c in list("ABCDEFGHIJKLMNOPQRSTUVWXYZ"):
    mathfrak_map[c] = chr(ord(c)-ord('A')+ord("ùï¨"))
font.add_macro_font("mathfrak", mathcal_map)
font.add_macro_font("frak", mathcal_map)

font.add_macros({
    "to": "‚ü∂",
    "mapsto": "‚üº"
})


font.add_ligatures({
    "0": "‚Å∞",
    "1": "¬π",
    "2": "¬≤",
    "3": "¬≥",
    "4": "‚Å¥",
    "5": "‚Åµ",
    "6": "‚Å∂",
    "7": "‚Å∑",
    "8": "‚Å∏",
    "9": "‚Åπ"
}, char_prefix="^")
font.add_ligatures({
    "0": "‚ÇÄ",
    "1": "‚ÇÅ",
    "2": "‚ÇÇ",
    "3": "‚ÇÉ",
    "4": "‚ÇÑ",
    "5": "‚ÇÖ",
    "6": "‚ÇÜ",
    "7": "‚Çá",
    "8": "‚Çà",
    "9": "‚Çâ"
}, char_prefix="_")

# custom bold greek \balpha, \bbeta, ... (exclude eta since b + eta = beta)
font.add_macros(
    {k: v for k, v in greek_map.items() if not k == "eta"},
    macro_prefix="b",
    repl_prefix="b",
    fonts=["DejaVu_Bold"]
)

font.save(
    camel_name="Test",
    add_copyright="Programming ligatures added by Ilya Skriblovsky from FiraCode\nFiraCode Copyright (c) 2015 by Nikita Prokopov"
)